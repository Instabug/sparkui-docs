{"version":3,"sources":["webpack:///./src/templates/docPage.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./src/components/sidebar.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","docPageTemplate","_ref","html","data","markdownRemark","a","createElement","className","dangerouslySetInnerHTML","__html","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","StaticQueryContext","createContext","StaticQuery","props","react_default","Consumer","staticQueryData","render","children","object","func","Header","siteTitle","gatsby_link_default","to","style","textDecoration","PagesList","_ref2","pages","map","edge","index","frontmatter","node","activeClassName","path","key","title","Sidebar","gatsby_browser_entry_StaticQuery","sidebar_PagesList","allMarkdownRemark","edges","_3649305949","Layout","Fragment","Helmet_default","site","siteMetadata","meta","name","content","lang","header","sidebar","_755544856"],"mappings":"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","file":"component---src-templates-doc-page-js-797350edbf620f5edbab.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\n\nconst docPageTemplate = ({ data }) => {\n  const { markdownRemark } = data\n  const html = markdownRemark.html\n\n  return (\n    <Layout>\n      <div className=\"spark-docs-details-body u-window-padding--2x\"\n        dangerouslySetInnerHTML = {{__html: html}}\n      />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query ($pathSlug: String!) {\n    markdownRemark(frontmatter: {path: {eq: $pathSlug} }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n\nexport default docPageTemplate\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Header = ({ siteTitle }) => (\n  <div className=\"spark-docs-layout__header\">\n    <Link\n      to=\"/\"\n      className=\"u-color-ink u-font--super\"\n      style={{\n        textDecoration: 'none',\n      }}>\n      {siteTitle}\n    </Link>\n  </div>\n)\n\nexport default Header\n","import React from 'react'\nimport { StaticQuery, Link, graphql } from 'gatsby'\n// import PropTypes from 'prop-types'\n// import './layout.css'\nconst Sidebar = ({ data }) => (\n    <StaticQuery\n      query={graphql`\n        query {\n          allMarkdownRemark(\n            sort: {\n              order: ASC,\n              fields: [frontmatter___title]\n            }\n          ) {\n            edges {\n              node {\n                frontmatter {\n                  title\n                  path\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={ data => (\n          <div className=\"spark-docs-sidebar\">\n            <PagesList pages={data.allMarkdownRemark.edges} />\n          </div>\n        )\n      }\n    />\n)\n\nconst PagesList = ({ pages }) => (\n  pages.map((edge, index) => {\n    const { frontmatter } = edge.node\n    return (\n      <Link\n        className=\"o-link spark-docs-sidebar-item\"\n        activeClassName=\"spark-docs-sidebar-item--current\"\n        to={frontmatter.path} >\n        <div key={index}> {frontmatter.title} </div>\n      </Link>\n    )\n  })\n)\n\nexport default Sidebar\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport '../scss/main.scss'\n\nimport Header from './header'\nimport Sidebar from './sidebar'\n\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <div className=\"spark-docs-container\">\n            <Header siteTitle={data.site.siteMetadata.title} />\n            <div className=\"spark-docs-layout\">\n                <Sidebar/>\n                <div className=\"spark-docs-details-body\">\n                  {children}\n                </div>\n            </div>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./src/components/sidebar.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","NotFoundPage","a","createElement","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","StaticQueryContext","createContext","StaticQuery","props","react_default","Consumer","staticQueryData","data","query","render","children","object","func","Header","siteTitle","className","gatsby_link_default","to","style","textDecoration","PagesList","_ref2","pages","map","edge","index","frontmatter","node","activeClassName","path","key","title","Sidebar","gatsby_browser_entry_StaticQuery","sidebar_PagesList","allMarkdownRemark","edges","_3649305949","Layout","Fragment","Helmet_default","site","siteMetadata","meta","name","content","lang","header","sidebar","_755544856"],"mappings":"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","file":"component---src-pages-404-js-be854fdf3c51346028fc.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Header = ({ siteTitle }) => (\n  <div className=\"spark-docs-layout__header\">\n    <Link\n      to=\"/\"\n      className=\"u-color-ink u-font--super\"\n      style={{\n        textDecoration: 'none',\n      }}>\n      {siteTitle}\n    </Link>\n  </div>\n)\n\nexport default Header\n","import React from 'react'\nimport { StaticQuery, Link, graphql } from 'gatsby'\n// import PropTypes from 'prop-types'\n// import './layout.css'\nconst Sidebar = ({ data }) => (\n    <StaticQuery\n      query={graphql`\n        query {\n          allMarkdownRemark(\n            sort: {\n              order: ASC,\n              fields: [frontmatter___title]\n            }\n          ) {\n            edges {\n              node {\n                frontmatter {\n                  title\n                  path\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={ data => (\n          <div className=\"spark-docs-sidebar\">\n            <PagesList pages={data.allMarkdownRemark.edges} />\n          </div>\n        )\n      }\n    />\n)\n\nconst PagesList = ({ pages }) => (\n  pages.map((edge, index) => {\n    const { frontmatter } = edge.node\n    return (\n      <Link\n        className=\"o-link spark-docs-sidebar-item\"\n        activeClassName=\"spark-docs-sidebar-item--current\"\n        to={frontmatter.path} >\n        <div key={index}> {frontmatter.title} </div>\n      </Link>\n    )\n  })\n)\n\nexport default Sidebar\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport '../scss/main.scss'\n\nimport Header from './header'\nimport Sidebar from './sidebar'\n\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <div className=\"spark-docs-container\">\n            <Header siteTitle={data.site.siteMetadata.title} />\n            <div className=\"spark-docs-layout\">\n                <Sidebar/>\n                <div className=\"spark-docs-details-body\">\n                  {children}\n                </div>\n            </div>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}